apiVersion: v1
kind: Template
metadata:
  name: h
message: |-
  Congratulations on deploying h into OpenShift!

objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: h
  spec:
    tags:
      - name: latest
        from:
          kind: DockerImage
          name: ${DOCKER_IMAGE}
        importPolicy:
          scheduled: true
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: h
      template: h
    name: h
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: h
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      app: h
      template: h
    name: h
  spec:
    replicas: 1
    selector:
      app: h
      deploymentconfig: h
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: h
          deploymentconfig: h
          template: h
      spec:
        replicas: 1
        containers:
        - image: api:latest
          imagePullPolicy: Always
          name: h
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
             - name: LOGGING_LEVEL
               value: DEBUG
          resources:
            limits:
              cpu: ${API_CPU_LIMIT}
              memory: ${API_MEM_LIMIT}
            requests:
              cpu: ${API_CPU_REQUEST}
              memory: ${API_MEM_REQUEST}
          livenessProbe:
            httpGet:
              path: /openapi
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /openapi
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - h
        from:
          kind: ImageStreamTag
          name: 'h:latest'
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: Route
  metadata:
    name: h
    creationTimestamp: null
    labels:
      app: h
      template: h
  spec:
    host: ${API_ROUTE}
    to:
      kind: Service
      name: h
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    wildcardPolicy: None
# Template Parameters
parameters:
- name: DOCKER_IMAGE
  displayName: Application Docker Image
  description: The docker image containing your application.
  value: h/h:latest
  required: true
- name: API_ROUTE
  displayName: API Route Name
  description: The route name to use for the API.
  value: h.example.com
  required: true
- name: API_MEM_LIMIT
  displayName: API Max Memory Limit
  description: API Pods Max Memory Limit
  value: 1700Mi
  required: true
- name: API_MEM_REQUEST
  displayName: API Memory Request
  description: API Pods Memory Request
  value: 800Mi
  required: true
- name: API_CPU_LIMIT
  displayName: API Max CPU Limit
  description: API Pods Max CPU Limit
  value: '1'
  required: true
- name: API_CPU_REQUEST
  displayName: API CPU Request
  description: API Pods CPU Request
  value: 100m
  required: true
