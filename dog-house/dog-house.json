{
    "swagger": "2.0",
    "info": {
        "title": "Dog House API",
        "description": "An API that manages a list of dog images.",
        "contact": {
            "name": "Eric Wittmann",
            "url": "https://ericwittmann.github.io",
            "email": "eric.wittmann@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "paths": {
        "/dogs": {
            "get": {
                "summary": "List Dogs",
                "description": "Gets a list of dogs organized by breed.  Optionally ask for only dogs by a particular breed.",
                "parameters": [
                    {
                        "name": "breed",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "#/definitions/Breed"
                            }
                        }
                    }
                }
            }
        },
        "/dogs/{dogId}": {
            "get": {
                "summary": "Get a single dog",
                "description": "Returns the information about a single dog.",
                "parameters": [
                    {
                        "name": "dogId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Dog"
                        }
                    },
                    "404": {}
                }
            }
        },
        "/dogs/{dogId}/vote": {
            "put": {
                "summary": "Vote for a dog",
                "description": "Case a vote for a dog because you love her SO much.",
                "parameters": [
                    {
                        "name": "dogId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Vote"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The vote was successfully cast.  Updated dog info returned.",
                        "schema": {
                            "$ref": "#/definitions/Dog"
                        }
                    },
                    "400": {
                        "description": "If a vote for this dog was already cast."
                    },
                    "404": {
                        "description": "Dog not found."
                    }
                }
            },
            "delete": {
                "summary": "Un-Vote for a dog",
                "description": "Remove your vote for a dog...",
                "parameters": [
                    {
                        "name": "dogId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vote was revoked successfully, updated dog info returned.",
                        "schema": {
                            "$ref": "#/definitions/Dog"
                        }
                    },
                    "400": {
                        "description": "No vote was previously cast for this dog."
                    },
                    "404": {
                        "description": "Dog not found."
                    }
                }
            }
        }
    },
    "definitions": {
        "Dog": {
            "properties": {
                "url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "favorites": {
                    "type": "integer"
                },
                "breed": {
                    "type": "string"
                }
            }
        },
        "Breed": {
            "properties": {
                "dogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Dog"
                    }
                },
                "breed": {
                    "type": "string"
                }
            }
        },
        "Vote": {}
    }
}